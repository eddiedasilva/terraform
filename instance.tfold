resource "aws_instance" "vm-test" {
  	#ami           		= "ami-0e34bbddc66def5ac"
  	#ami           		= "var.lookup(var.AWS_REGION)"
  	ami           		= "${lookup(var.AMIS, var.AWS_REGION)}"
  	#ami           		= lookup(var.AMIS, var.AWS_REGION, "") # last parameter is the default value
  	instance_type         	= "t2.micro"
  	key_name		= "eddie"




#   	 provisioner "remote-exec" {
#		connection {
#                user    = "ec2-user"
#                private_key = "${file("~/.ssh/eddie.pem")}"
#
#
#               inline          = [
#                       "chmod +x /opt/script.sh",
#                       "/opt/script.sh"
#               	]	
#      		}
	}




}	

#	provisioner "file" {
#                source		= "~/.ssh/eddie.pem"
#                destination	= "/home/ec2-user/.ssh/eddie.pem"
#		connection {
#		host        	= coalesce(self.public_ip, self.private_ip)
#		user	= "ec2-user"
#		private_key = "${file("~/.ssh/eddie.pem")}"

#
#		}
#     
#	}
#







##################################### works #######################
# resource "aws_instance" "vm-d" {
#        ami                     = "${lookup(var.AMIS, var.AWS_REGION)}"
#        instance_type           = "t2.micro"
#        key_name                = "eddie"
#
#        provisioner "file" {
#                source          = "script.sh"
#                destination     = "/opt/script.sh"
#        }
#	provisioner "remote-exec" {
#		inline 		= [
#			"chmod +x /opt/script.sh",
#			"/opt/script.sh"
#		]
#	}
#}
  
#resource "aws_security_group" "test-terrafor" {
#  #name = "${random_pet.name.id}-sg"
#  name = "test-security"
#  ingress {
#    from_port   = 22
#    to_port     = 22
#    protocol    = "tcp"
#    cidr_blocks = ["0.0.0.0/0"]
#  }
#}
